!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ARCH	Makefile	/^export ARCH ?= arm$/;"	m
CROSS_COMPILE	Makefile	/^export CROSS_COMPILE ?= $(CROSS_COMPILE_ARM)$/;"	m
DRV_MODULE_VERSION	wr_rtu.c	/^MODULE_VERSION(DRV_MODULE_VERSION);$/;"	v
DRV_MODULE_VERSION	wr_rtu.c	45;"	d	file:
FPGA_BASE_RTU	wr_rtu.c	50;"	d	file:
LINUX	Makefile	/^LINUX           ?= ..\/..\/..\/kernel$/;"	m
WRVIC_BASE_IRQ	wr_rtu.c	48;"	d	file:
WR_FLAG_IRQDISABLE	wr_rtu.c	57;"	d	file:
WR_RTU_IRQ	wr_rtu.c	47;"	d	file:
WR_RTU_IRQENA	wr_rtu.h	7;"	d
WR_RTU_IRQWAIT	wr_rtu.h	6;"	d
__WR_IOC_MAGIC	wr_rtu.h	4;"	d
__WR_RTU_H	wr_rtu.h	2;"	d
clean	Makefile	/^clean:$/;"	t
csr	wr_rtu.c	/^	uint32_t csr =  wr_rtu_readl(UFIFO_CSR);$/;"	l
dev	wr_rtu.c	/^static struct wr_rtu_dev dev;$/;"	v	typeref:struct:wr_rtu_dev	file:
err	wr_rtu.c	/^	int err;$/;"	l
flags	wr_rtu.c	/^	unsigned long		flags;$/;"	m	struct:wr_sflow_dev	file:	access:public
lock	wr_rtu.c	/^	spinlock_t		lock;$/;"	m	struct:wr_sflow_dev	file:	access:public
obj-m	Makefile	/^obj-m           := wr_rtu.o$/;"	m
obj-m	Makefile	/^obj-m           := wr_rtu.o$/;"	t
q	wr_rtu.c	/^	wait_queue_head_t	q;$/;"	m	struct:wr_sflow_dev	file:	access:public
regs	wr_rtu.c	/^static struct RTU_WB __iomem *regs;$/;"	v	typeref:struct:__iomem	file:
ret	wr_rtu.c	/^	int ret = 0;$/;"	l
rtu_ufifo_is_empty	wr_rtu.c	/^static int rtu_ufifo_is_empty(void)$/;"	f	file:	signature:(void)
wr_rtu_clear_irq	wr_rtu.c	/^static void wr_rtu_clear_irq(void)$/;"	f	file:	signature:(void)
wr_rtu_disable_irq	wr_rtu.c	/^static void wr_rtu_disable_irq(void)$/;"	f	file:	signature:(void)
wr_rtu_enable_irq	wr_rtu.c	/^static void wr_rtu_enable_irq(void)$/;"	f	file:	signature:(void)
wr_rtu_exit	wr_rtu.c	/^module_exit(wr_rtu_exit);$/;"	v
wr_rtu_exit	wr_rtu.c	/^static void __exit wr_rtu_exit(void)$/;"	f	file:	signature:(void)
wr_rtu_fops	wr_rtu.c	/^static struct file_operations wr_rtu_fops = {$/;"	v	typeref:struct:file_operations	file:
wr_rtu_init	wr_rtu.c	/^module_init(wr_rtu_init);$/;"	v
wr_rtu_init	wr_rtu.c	/^static int __init wr_rtu_init(void)$/;"	f	file:	signature:(void)
wr_rtu_interrupt	wr_rtu.c	/^static irqreturn_t wr_rtu_interrupt(int irq, void *unused)$/;"	f	file:	signature:(int irq, void *unused)
wr_rtu_ioctl	wr_rtu.c	/^static long wr_rtu_ioctl(struct file *f, unsigned int cmd, unsigned long arg)$/;"	f	file:	signature:(struct file *f, unsigned int cmd, unsigned long arg)
wr_rtu_misc	wr_rtu.c	/^static struct miscdevice wr_rtu_misc = {$/;"	v	typeref:struct:miscdevice	file:
wr_rtu_readl	wr_rtu.c	63;"	d	file:
wr_rtu_writel	wr_rtu.c	64;"	d	file:
wr_sflow_dev	wr_rtu.c	/^struct wr_sflow_dev {$/;"	s	file:
wr_sflow_dev::flags	wr_rtu.c	/^	unsigned long		flags;$/;"	m	struct:wr_sflow_dev	file:	access:public
wr_sflow_dev::lock	wr_rtu.c	/^	spinlock_t		lock;$/;"	m	struct:wr_sflow_dev	file:	access:public
wr_sflow_dev::q	wr_rtu.c	/^	wait_queue_head_t	q;$/;"	m	struct:wr_sflow_dev	file:	access:public
